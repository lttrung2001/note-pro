plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.lttrung.notepro"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0")
    implementation 'com.google.android.material:material:1.5.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'androidx.annotation:annotation:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'com.google.firebase:firebase-storage:20.1.0'

    daggerHilt()
    retrofit()
    room()
    coroutines()
    jwt()
    image()
    customUI()
    socketIO()
    jitsiSDK()

    // Circle image
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

private void daggerHilt() {
    dependencies.implementation 'com.google.dagger:hilt-android:2.43.1'
    dependencies.kapt 'com.google.dagger:hilt-android-compiler:2.43.1'
    dependencies.kapt 'androidx.hilt:hilt-compiler:1.0.0'
    dependencies.implementation "androidx.activity:activity-ktx:1.5.0"
}

private void retrofit() {
    dependencies.implementation 'com.squareup.retrofit2:retrofit:2.7.2'
    dependencies.implementation 'com.squareup.retrofit2:converter-gson:2.7.2'
    dependencies.implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    dependencies.implementation 'com.google.code.gson:gson:2.9.0'
}

private void room() {
    def room_version = "2.4.0"
    dependencies.implementation("androidx.room:room-runtime:$room_version")
    dependencies.annotationProcessor("androidx.room:room-compiler:$room_version")
    dependencies.kapt("androidx.room:room-compiler:$room_version")
    dependencies.implementation("androidx.room:room-ktx:$room_version")
    dependencies.implementation("androidx.room:room-rxjava2:$room_version")
    dependencies.implementation("androidx.room:room-rxjava3:$room_version")
    dependencies.implementation("androidx.room:room-guava:$room_version")
    dependencies.testImplementation("androidx.room:room-testing:$room_version")
    dependencies.implementation("androidx.room:room-paging:$room_version")
}

private void coroutines() {
    dependencies.implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9")
}

private void jwt() {
    // https://mvnrepository.com/artifact/com.auth0/java-jwt
    dependencies.implementation 'com.auth0.android:jwtdecode:2.0.1'
}

private void image() {
    dependencies.implementation 'com.squareup.picasso:picasso:2.8'
}

private void customUI() {
    dependencies.implementation 'com.github.razir.progressbutton:progressbutton:2.1.0'
}

private void socketIO() {
    dependencies.implementation ('io.socket:socket.io-client:2.0.0') {
        exclude group: 'org.json', module: 'json'
    }
}

private void jitsiSDK() {
    dependencies.implementation ('org.jitsi.react:jitsi-meet-sdk:8.1.2') { transitive = true }
}

kapt {
    correctErrorTypes = true
}